############################################## 
# Esqueleto para todas las plataformas
############################################## 

#Generic make options
LINKER = ar
CC = gcc
LIBRARIAN = ranlib
GT_LIBS=-lgtstd

ifeq ($(HB_COMPILER),mingw32)
   CFLAGS +=-fms-extensions -Wall $(shell pkg-config --cflags tgtk3)-mms-bitfields -ffast-math -mno-cygwin -O3
   #ifeq ($(SUPPORT_PRINT_WIN32),yes)
   #  CFLAGS += $(shell pkg-config --cflags libgnomeprintui-2.2) 
   #endif
else
   CFLAGS += -Wall -I. $(shell pkg-config --cflags tgtk3)
   #ifeq ($(SUPPORT_PRINT_LINUX),yes)
   #  CFLAGS += $(shell pkg-config --cflags libgnomeprintui-2.2) -DHB_OS_LINUX
   #  LIBS += $(shell pkg-config --libs libgnomeprintui-2.2)
   #endif
endif

ifeq ($(XBASE_COMPILER),HARBOUR)
  CFLAGS += -D_HB_API_INTERNAL_
endif

#libraries for binary building
ifeq ($(HB_MT),MT)
   LIBFILES_ = -ldebug -lvmmt -lrtlmt $(GT_LIBS) -lrddmt -lrtlmt -lvmmt -lmacro -lppmt -ldbfntxmt -ldbfcdx -ldbfdbt -lcommon -lm -lpthread
else
   ifeq ($(HB_COMPILER),mingw32)
     ifeq ($(XBASE_COMPILER),XHARBOUR)
         # XHARBOUR
         #LIBFILES_ =  -ldebug -lvm -lrtl $(GT_LIBS) -llang -lrdd -lrtl -lvm -lmacro -lpp -ldbfntx -ldbfcdx -ldbfdbt -lrtl -lcommon -lm -lgtwin $(GT_LIBS) -lgtnul -lgtwin 
         LIBFILES_ = -lvm -lrtl -llang -lrdd -lmacro -lpp -ldbfntx -ldbfcdx -ldbffpt -lhbsix -lhsx -lpcrepos -lcommon -lm -lgtwin -lgtnul $(GT_LIBS) 
     else
         # HARBOUR
         #LIBFILES_ =  -ldebug -lvm -lrtl $(GT_LIBS) -llang -lrdd -lrtl -lvm -lmacro -lpp -ldbfntx -ldbfcdx -ldbfdbt -lcommon -lm -lgtwin $(GT_LIBS) -lgtwin
         LIBFILES_ = -lvm -lrtl $(GT_LIBS) -llang -lrdd -lmacro -lpp -ldbfntx -ldbfcdx -ldbffpt -lhbsix -lhsx -lcommon -lm -lgtwin $(GT_LIBS)
     endif
   else
     ifeq ($(XBASE_COMPILER),XHARBOUR)
        # XHARBOUR
        LIBFILES_ = -lvm -lrtl -lgtnul -lgtcrs -lncurses -llang -lrdd -lmacro -lpp -ldbfntx -ldbfcdx -ldbffpt -lcommon -lm -lhbsix -lhsx -lpcrepos -lgpm
     else
        # HARBOUR
        LIBFILES_ = -lvm -lrtl -lgtcrs -lncurses -llang -lrdd -lmacro -lpp -ldbfntx -ldbfcdx -ldbffpt -lcommon -lm -lhbsix -lhsx $(GT_LIBS)
     endif
   endif
endif

ifeq ($(HB_COMPILER),mingw32)
    ifeq ($(XBASE_COMPILER),XHARBOUR)
        # XHARBOUR
        LIBFILES_ += -lhbodbc -luser32 -lwinspool -lole32 -loleaut32 -luuid -lgdi32 -lcomctl32 -lcomdlg32 -lodbc32 -lwininet -lwsock32
    else
       # HARBOUR
       LIBFILES_ += -luser32 -lwinspool -lole32 -loleaut32 -luuid -lgdi32 -lcomctl32 -lcomdlg32 -lodbc32 -lwininet -lwsock32
    endif
   EXETYPE=.exe
else
   LIBFILES_ +=
   EXETYPE=
endif

#librerias usadas por Tgtk las definimos aqui. GTK y GLADE
LIBS += -L$(LIBDIR_TGTK) $(shell pkg-config --libs tgtk3 )
PRGFLAGS += -I$(INCLUDE_TGTK_PRG)

# Soporte impresion para Win32, las libs de gnome van en este orden y despues de tgtk si no, no enlaza.
ifeq ($(SUPPORT_PRINT_WIN32),yes)
  LIBS += $(shell pkg-config --libs libgnomeprint-2.2) $(shell pkg-config --libs libgnomeprintui-2.2) 
endif

#nos servirá, para compilar prgs exclusivos para GNU/Linux
#por ejemplo, gPrinter.prg
ifeq ($(HB_COMPILER),gcc)
   PRGFLAGS += -DHB_OS_LINUX
endif   

LIBDIR_ = $(LIBDIR) -L$(HB_LIB_INSTALL)
LIBS_=  $(LIBS)-Wl,--start-group $(LIBFILES_) -Wl,--end-group

ifeq ($(strip $(SOURCE_TYPE)),)
SOURCE_TYPE=prg
endif

#Sources / object determination rule
#subidr might override this file by providing a makefile.sources
ifeq ($(strip $(SOURCES)),)
SOURCES=$(wildcard *.$(SOURCE_TYPE))
endif

ifeq ($(strip $(OBJECTS)),)
OBJECTS=$(patsubst %.$(SOURCE_TYPE),%.o,$(SOURCES))
ifneq ($(strip $(CSOURCES)),)
OBJECTS+=$(patsubst %.c,%.o,$(CSOURCES))
endif
endif


#COMMANDS
all:$(TARGET) $(TARGETS)
win:$(TARGET) $(TARGETS)
linux:$(TARGET) $(TARGETS)

.PHONY: clean install

%$(EXETYPE):%.o
	$(CC) -o$@ $< $(LIBDIR_) $(LIBS_)

%.o: %.c
	$(CC) -c -o$@ $(CFLAGS) -I$(HB_INC_INSTALL) $<

%.c: %.prg
	$(HB_BIN_INSTALL)/harbour -w -q0 -gc0 -n $(PRGFLAGS) -I$(HB_INC_INSTALL)  -o$@ $<

$(TARGET): $(OBJECTS)
ifeq ( lib , $(patsubst %.a, lib, $(TARGET)))
	$(LINKER) -r $(TARGET) $(OBJECTS)
	$(LIBRARIAN) $(TARGET)
else
	$(CC) -s -o $(TARGET) $(OBJECTS) $(LIBDIR_) $(LIBS_)
endif

clean:
	rm -f *.o
	rm -f *~
	rm -f *.ppo
	rm -f $(TARGET)
	rm -f $(TARGET).exe
	rm -f $(TARGETS)

install: all
	cp -f *.a $(TGTK_INSTALL)
